{"version":3,"file":"main.min.js","names":["document","addEventListener","links","querySelectorAll","link","e","preventDefault","targetId","getAttribute","substring","targetElement","getElementById","window","scrollTo","top","offsetTop","behavior","CSbody","querySelector","CSnavbarMenu","CShamburgerMenu","ariaExpanded","csUL","setAttribute","classList","toggle","documentElement","scrollTop","add","remove","dropDowns","Array","from","item","onClick","initializeSlider","slider","index","slides","dots","currentIndex","showSlides","length","forEach","slide","i","style","display","dot","className","replace"],"sources":["main.js"],"mappings":"AACAA,SAASC,iBAAiB,oBAAoB,KAC1C,MAAMC,EAAQF,SAASG,iBAAiB,gBAExC,IAAK,MAAMC,KAAQF,EACfE,EAAKH,iBAAiB,SAAUI,IAC5BA,EAAEC,iBAEF,MAAMC,EAAWH,EAAKI,aAAa,QAAQC,UAAU,GAC/CC,EAAgBV,SAASW,eAAeJ,GAE1CG,GACAE,OAAOC,SAAS,CACZC,IAAKJ,EAAcK,UACnBC,SAAU,UAElB,GAER,IAOJ,IAAIC,OAASjB,SAASkB,cAAc,QACpC,MAAMC,aAAenB,SAASkB,cAAc,eACtCE,gBAAkBpB,SAASkB,cAAc,0BAW/C,SAASG,eACL,MAAMC,EAAOtB,SAASkB,cAAc,gBAGjB,UAFAI,EAAKd,aAAa,iBAGjCc,EAAKC,aAAa,gBAAiB,QAEnCD,EAAKC,aAAa,gBAAiB,QAE3C,CAlBAH,gBAAgBnB,iBAAiB,SAAS,WACtCmB,gBAAgBI,UAAUC,OAAO,aACjCN,aAAaK,UAAUC,OAAO,aAC9BR,OAAOO,UAAUC,OAAO,WAExBJ,cACJ,IAkBArB,SAASC,iBAAiB,UAAWI,IAClBL,SAAS0B,gBAAgBC,WAC3B,IACjB3B,SAASkB,cAAc,QAAQM,UAAUI,IAAI,UAEzC5B,SAASkB,cAAc,QAAQM,UAAUK,OAAO,SAChD,IAIJ,MAAMC,UAAYC,MAAMC,KAAKhC,SAASG,iBAAiB,6BACnD,IAAK,MAAM8B,KAAQH,UAAW,CAC1B,MAAMI,EAAU,KAChBD,EAAKT,UAAUC,OAAO,YAAW,EAErCQ,EAAKhC,iBAAiB,QAASiC,EAC/B,CASA,SAASC,iBAAiBC,EAAQC,GAChC,MAAMC,EAASF,EAAOjC,iBAAiB,UACjCoC,EAAOH,EAAOjC,iBAAiB,QAEnC,IAAIqC,EAAe,EAEnB,SAASC,EAAWJ,GACZA,GAASC,EAAOI,OAAO,IACvBF,EAAe,GAEfH,EAAQ,IACRG,EAAeF,EAAOI,QAG1BJ,EAAOK,SAAQ,CAACC,EAAOC,KACnBD,EAAME,MAAMC,QAAWF,IAAML,EAAgB,QAAU,MAAM,IAGjED,EAAKI,SAAQ,CAACK,EAAKH,KACfG,EAAIC,UAAYD,EAAIC,UAAUC,QAAQ,UAAW,IAC7CL,IAAML,IACNQ,EAAIC,WAAa,UACrB,GAER,CAIAb,EAAOlB,cAAc,SAASjB,iBAAiB,SAAS,MAChDuC,EAAe,IAAGC,EAAWD,GAAgB,GACjDC,EAAWD,GAAgB,EAAC,IAGhCJ,EAAOlB,cAAc,SAASjB,iBAAiB,SAAS,KACpDwC,EAAWD,GAAgB,EAAE,IAGjCD,EAAKI,SAAQ,CAACK,EAAKH,KACfG,EAAI/C,iBAAiB,SAAS,KAC1BwC,EAAWD,EAAeK,EAAE,GAC9B,GAEV,CAhDA7C,SAASC,iBAAiB,oBAAoB,KAC1BD,SAASG,iBAAiB,oBAClCwC,SAAQ,CAACP,EAAQC,IAAUF,iBAAiBC,EAAQC,IAAO","ignoreList":[],"sourcesContent":["//Smooth scrolling\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const links = document.querySelectorAll('a[href^=\"#\"]');\r\n\r\n    for (const link of links) {\r\n        link.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            const targetId = link.getAttribute('href').substring(1);\r\n            const targetElement = document.getElementById(targetId);\r\n\r\n            if (targetElement) {\r\n                window.scrollTo({\r\n                    top: targetElement.offsetTop,\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n// add classes for mobile navigation toggling\r\nvar CSbody = document.querySelector(\"body\");\r\nconst CSnavbarMenu = document.querySelector(\"#navigation\");\r\nconst CShamburgerMenu = document.querySelector(\"#navigation .cs-toggle\");\r\n\r\nCShamburgerMenu.addEventListener('click', function() {\r\n    CShamburgerMenu.classList.toggle(\"cs-active\");\r\n    CSnavbarMenu.classList.toggle(\"cs-active\");\r\n    CSbody.classList.toggle(\"cs-open\");\r\n    // run the function to check the aria-expanded value\r\n    ariaExpanded();\r\n});\r\n\r\n// checks the value of aria expanded on the cs-ul and changes it accordingly whether it is expanded or not\r\nfunction ariaExpanded() {\r\n    const csUL = document.querySelector('#cs-expanded');\r\n    const csExpanded = csUL.getAttribute('aria-expanded');\r\n\r\n    if (csExpanded === 'false') {\r\n        csUL.setAttribute('aria-expanded', 'true');\r\n    } else {\r\n        csUL.setAttribute('aria-expanded', 'false');\r\n    }\r\n}\r\n\r\n// This script adds a class to the body after scrolling 100px\r\n// and we used these body.scroll styles to create some on scroll\r\n// animations with the navbar\r\n\r\ndocument.addEventListener('scroll', (e) => {\r\n    const scroll = document.documentElement.scrollTop;\r\n    if(scroll >= 100){\r\ndocument.querySelector('body').classList.add('scroll')\r\n    } else {\r\n    document.querySelector('body').classList.remove('scroll')\r\n    }\r\n});\r\n\r\n// mobile nav toggle code\r\nconst dropDowns = Array.from(document.querySelectorAll('#navigation .cs-dropdown'));\r\n    for (const item of dropDowns) {\r\n        const onClick = () => {\r\n        item.classList.toggle('cs-active')\r\n    }\r\n    item.addEventListener('click', onClick)\r\n    }\r\n\r\n\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        const sliders = document.querySelectorAll('.products-slider');\r\n        sliders.forEach((slider, index) => initializeSlider(slider, index));\r\n    });\r\n\r\n\r\n    function initializeSlider(slider, index) {\r\n      const slides = slider.querySelectorAll('.slide');\r\n      const dots = slider.querySelectorAll('.dot');\r\n\r\n        let currentIndex = 0;\r\n\r\n        function showSlides(index) {\r\n            if (index >= slides.length-1) {\r\n                currentIndex = 0;\r\n            }\r\n            if (index < 0) {\r\n                currentIndex = slides.length;\r\n            }\r\n\r\n            slides.forEach((slide, i) => {\r\n                slide.style.display = (i === currentIndex) ? 'block' : 'none';\r\n            });\r\n\r\n            dots.forEach((dot, i) => {\r\n                dot.className = dot.className.replace(' active', '');\r\n                if (i === currentIndex) {\r\n                    dot.className += ' active';\r\n                }\r\n            });\r\n        }\r\n\r\n        // showSlides(currentIndex);\r\n\r\n        slider.querySelector('.prev').addEventListener('click', () => {\r\n            if (currentIndex = 0) showSlides(currentIndex -= 1);\r\n            showSlides(currentIndex += 1)\r\n        });\r\n\r\n        slider.querySelector('.next').addEventListener('click', () => {\r\n            showSlides(currentIndex += 1);\r\n        });\r\n\r\n        dots.forEach((dot, i) => {\r\n            dot.addEventListener('click', () => {\r\n                showSlides(currentIndex = i);\r\n            });\r\n        });\r\n    }\r\n"]}